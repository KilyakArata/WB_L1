package main

import (
	"fmt"
	"sync"
)

func main() {
	// Инициализируем массив чисел
	list := []int{2, 4, 6, 8, 10}

	// Создаем экземпляр sync.WaitGroup для синхронизации горутин
	var wg sync.WaitGroup

	// Проходимся по массиву чисел
	for i := 0; i < len(list); i++ {
		wg.Add(1) // Увеличиваем счетчик WaitGroup перед запуском каждой горутины

		// Запускаем горутину для расчета квадрата числа
		go func(i int) {
			defer wg.Done() // Уменьшаем счетчик WaitGroup по завершении горутины

			// Рассчитываем квадрат числа и сохраняем результат обратно в массив
			v := list[i] * list[i]
			list[i] = v
		}(i) // Передаем текущее значение i в анонимную функцию, чтобы избежать условий гонки
	}

	wg.Wait() // Ожидаем завершения всех горутин

	// Выводим измененный массив, содержащий квадраты чисел
	fmt.Println(list)
}
